import pandas as pd
import os


BUILDING_SITUATION_DETACHED = 1
BUILDING_SITUATION_SEMIDETACHED = 2
BUILDING_SITUATION_ENDTERRACE = 3
BUILDING_SITUATION_MIDTERRACE = 4
BUILDING_SITUATION_LINKDETACHED = 5
BUILDING_SITUATION_FLAT = 6
BUILDING_SITUATION_GROUNDFLOOR = 7

BUILDING_SITUATION_CHOICES = (
    (BUILDING_SITUATION_DETACHED, "Detached"),
    (BUILDING_SITUATION_SEMIDETACHED, "Semi detached"),
    (BUILDING_SITUATION_ENDTERRACE, "End terrace"),
    (BUILDING_SITUATION_MIDTERRACE, "Mid terrace"),
    (BUILDING_SITUATION_LINKDETACHED, "Link detached"),
    (BUILDING_SITUATION_FLAT, "Flat"),
    (BUILDING_SITUATION_GROUNDFLOOR, "Ground floor"),
)

BUILDING_TYPE_UNKNOWN = 0
BUILDING_TYPE_FLAT = 1
BUILDING_TYPE_BUNGALOW = 2
BUILDING_TYPE_STUDIO_FLAT = 3
BUILDING_TYPE_RETIREMENT = 4
BUILDING_TYPE_MAISONETTE = 5
BUILDING_TYPE_TOWNHOUSE = 6
BUILDING_TYPE_HOUSE = 7
BUILDING_TYPE_COUNTRYHOUSE = 8
BUILDING_TYPE_PENTHOUSE = 9
BUILDING_TYPE_VILLA = 10
BUILDING_TYPE_LODGE = 11
BUILDING_TYPE_CHALET = 12
BUILDING_TYPE_BARNCONVERSION = 13
BUILDING_TYPE_COTTAGE = 14
BUILDING_TYPE_DUPLEX = 15
BUILDING_TYPE_MOBILEHOME = 16
BUILDING_TYPE_PARKHOME = 17

BUILDING_TYPE_CHOICES = (
    (BUILDING_TYPE_UNKNOWN, "Unknown type"),
    (BUILDING_TYPE_FLAT, "Flat/apartment"),
    (BUILDING_TYPE_BUNGALOW, "Bungalow"),
    (BUILDING_TYPE_STUDIO_FLAT, "Studio flat"),
    (BUILDING_TYPE_RETIREMENT, "Retirement property"),
    (BUILDING_TYPE_MAISONETTE, "Maisonette"),
    (BUILDING_TYPE_TOWNHOUSE, "Town house"),
    (BUILDING_TYPE_HOUSE, "House"),
    (BUILDING_TYPE_COUNTRYHOUSE, "Country house"),
    (BUILDING_TYPE_PENTHOUSE, "Penthouse"),
    (BUILDING_TYPE_VILLA, "Villa"),
    (BUILDING_TYPE_LODGE, "Lodge"),
    (BUILDING_TYPE_CHALET, "Chalet"),
    (BUILDING_TYPE_BARNCONVERSION, "Barn conversion"),
    (BUILDING_TYPE_COTTAGE, "Cottage"),
    (BUILDING_TYPE_DUPLEX, "Duplex"),
    (BUILDING_TYPE_MOBILEHOME, "Mobile home"),
    (BUILDING_TYPE_PARKHOME, "Park home"),
)

PROPERTY_TYPE_FORSALE = 1
PROPERTY_TYPE_TORENT = 2
PROPERTY_TYPE_NEWBUILD = 3
PROPERTY_TYPE_OVERSEAS = 4
PROPERTY_TYPE_COMMERCIALFORSALE = 5
PROPERTY_TYPE_COMMERCIALTORENT = 6


PROPERTY_TYPE_MAP = {
    PROPERTY_TYPE_FORSALE: 'residential-for-sale',
    PROPERTY_TYPE_TORENT: 'residential-to-rent',
    PROPERTY_TYPE_OVERSEAS: 'overseas',
    PROPERTY_TYPE_NEWBUILD: 'residential-new-build-for-sale',
    PROPERTY_TYPE_COMMERCIALTORENT: 'commercial-to-let',
    PROPERTY_TYPE_COMMERCIALFORSALE: 'commercial-for-sale',
}

STATION_TYPE_NATIONAL_RAIL = 1
STATION_TYPE_TRAM = 2
STATION_TYPE_UNDERGROUND = 3
STATION_TYPE_OVERGROUND = 4

STATION_TYPE_CHOICES = (
    ('national rail', STATION_TYPE_NATIONAL_RAIL),
    ('tram', STATION_TYPE_TRAM),
    ('underground', STATION_TYPE_UNDERGROUND),
    ('overground', STATION_TYPE_OVERGROUND),
)

URL_STATUS_ACTIVE = 1
URL_STATUS_REMOVED = 2
URL_STATUS_SUSPENDED = 3
URL_STATUS_INACCESSIBLE = 4

URL_STATUS_CHOICES = (
    (URL_STATUS_ACTIVE, "active"),
    (URL_STATUS_REMOVED, "removed"),
    (URL_STATUS_SUSPENDED, "suspended"),
    (URL_STATUS_INACCESSIBLE, "not found"),
)

BASE_URL = "https://www.rightmove.co.uk"

FIND_URLS = {
    PROPERTY_TYPE_FORSALE: BASE_URL + "/property-for-sale/find.html",
    PROPERTY_TYPE_TORENT: BASE_URL + "/property-to-rent/find.html",
}

outcode_fn = os.path.join(
    os.path.split(os.path.abspath(__file__))[0],
    "outcodes.tsv"
)
OUTCODE_MAP = pd.read_csv(outcode_fn, header=0, index_col=0, sep="\t").squeeze().to_dict()